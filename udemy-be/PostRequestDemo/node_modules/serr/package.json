{
  "_args": [
    [
      {
        "raw": "serr@^1.0.0",
        "scope": null,
        "escapedName": "serr",
        "name": "serr",
        "rawSpec": "^1.0.0",
        "spec": ">=1.0.0 <2.0.0",
        "type": "range"
      },
      "/home/ubuntu/workspace/udemy/udemy-be/PostRequestDemo/node_modules/logops"
    ]
  ],
  "_from": "serr@>=1.0.0 <2.0.0",
  "_id": "serr@1.0.1",
  "_inCache": true,
  "_location": "/serr",
  "_nodeVersion": "6.7.0",
  "_npmOperationalInternal": {
    "host": "packages-16-east.internal.npmjs.com",
    "tmp": "tmp/serr-1.0.1.tgz_1476199460948_0.5869295040611178"
  },
  "_npmUser": {
    "name": "jmendiara",
    "email": "jmendiara@gmail.com"
  },
  "_npmVersion": "3.10.3",
  "_phantomChildren": {},
  "_requested": {
    "raw": "serr@^1.0.0",
    "scope": null,
    "escapedName": "serr",
    "name": "serr",
    "rawSpec": "^1.0.0",
    "spec": ">=1.0.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/logops"
  ],
  "_resolved": "https://registry.npmjs.org/serr/-/serr-1.0.1.tgz",
  "_shasum": "74a5b9e7fadd5b55f8a85e7e72bc00a419b6e482",
  "_shrinkwrap": null,
  "_spec": "serr@^1.0.0",
  "_where": "/home/ubuntu/workspace/udemy/udemy-be/PostRequestDemo/node_modules/logops",
  "author": {
    "name": "Telefonica I+D"
  },
  "bugs": {
    "url": "https://github.com/therror/serr/issues"
  },
  "contributors": [
    {
      "name": "Javier Mendiara Cañardo",
      "email": "javier.mendiaracanardo@telefonica.com",
      "url": "http://twitter.com/jmendiara"
    }
  ],
  "dependencies": {
    "lodash": "^4.0.0"
  },
  "description": "Serialize Javascript Errors",
  "devDependencies": {
    "chai": "^3.4.1",
    "conventional-changelog": "^0.5.3",
    "coveralls": "^2.11.6",
    "eslint": "^1.10.3",
    "istanbul": "^0.4.1",
    "jscs": "^2.7.0",
    "mocha": "^2.3.4",
    "release-it": "^2.3.1",
    "sinon": "^1.17.2",
    "sinon-chai": "^2.8.0"
  },
  "directories": {},
  "dist": {
    "shasum": "74a5b9e7fadd5b55f8a85e7e72bc00a419b6e482",
    "tarball": "https://registry.npmjs.org/serr/-/serr-1.0.1.tgz"
  },
  "gitHead": "2943e4538bc56031ca04f1981c97b0272f66d4ed",
  "homepage": "https://github.com/therror/serr#readme",
  "keywords": [
    "Error",
    "serialization",
    "serialize"
  ],
  "license": "Apache-2.0",
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "jmendiara",
      "email": "jmendiara@gmail.com"
    }
  ],
  "name": "serr",
  "optionalDependencies": {},
  "readme": "# serr\n\n[![npm version](https://img.shields.io/npm/v/serr.svg)](http://badge.fury.io/js/serr)\n[![Build Status](https://img.shields.io/travis/therror/serr.svg)](https://travis-ci.org/therror/serr)\n[![Coveralls branch](https://img.shields.io/coveralls/therror/serr/master.svg)](https://coveralls.io/r/therror/serr?branch=master)\n[![Dependency Status](https://img.shields.io/gemnasium/therror/serr.svg)](https://gemnasium.com/therror/serr)\n\nConvert node Errors to several flavours and ready for serialization, because some error instance properties are not enumerable and cannot be magically serialized \n * to plain javascript Objects\n * to a string\n  \nFurthermore, some awful libraries do not return errors. `serr` makes a best effort to serialize their no \"errors\" as something understandable\n\n[*Try `serr` online*](https://tonicdev.com/npm/serr)\n\n## Usage\n```sh\nnpm install --save serr\n```\n\n```js\nvar serializeError = require('serr');\n\nvar error = new Error('User Not Found');\nerror.statusCode = 404;\nvar obj = serializeError(error).toObject();\n// { \n//   statusCode: 404,\n//   message: 'User Not Found',\n//   name: 'Error',\n//   constructor: 'Error',\n// }\nvar str = serializeError(error).toString(); \n// 'Error: User Not Found'\n\n// stack traces are expensive to calculate... Add them on demand.\n// ES2015 Classes Support for easy logging your custom ones\nclass MyError extends Error {};\nvar obj = serializeError(new MyError('Failed')).toObject(true);\n// { \n//   message: 'Failed',\n//   name: 'Error', // <------ Warning! It's not MyError\n//   constructor: 'MyError',  // <----- Constructor name\n//   stack: 'Error: Failed\\n    at MyError (repl:1:23)\\n    at repl:1:26\\n    at REPLServer.defaultEval (repl.js:248:27)\\n...'\n// }\nvar str = serializeError(error).toString(true); \n// 'Error: Failed\\n    at MyError (repl:1:23)\\n    at repl:1:3\\n ....'\n```\n\nIf the error has a `cause()` method that returns another error, as defined by [verror](https://github.com/davepacheco/node-verror), [restify v2.0](https://github.com/mcavage/node-restify) or [therror v1.0](https://github.com/therror/therror), it will concatenate the the cause stacktrace to the main one and add a `$$causes` array.\n\n```js\n\nvar error = new Error('User Not Found');\nerror.cause = () => new Error('ID not found');\nvar obj = serializeError(error).toObject(true);\n// { \n//   message: 'User Not Found',\n//   name: 'Error',\n//   constructor: 'Error',\n//   $$causes: [ { message: 'ID not found', name: 'Error', constructor: 'Error' } ]\n//   stack: 'Error: User Not Found\\n    at repl:1:13\\n ... \\nCaused by: Error: ID not found\\n    at Error.error.cause (repl:1:21)\\n ...' \n// }\nvar str = serializeError(error).toString(); \n// 'Error: User Not Found: ID not found'\n\nvar str = serializeError(error).toString(true); \n// 'Error: User Not Found\\n    at repl:1:13\\n ...Caused by: Error: ID not found\\n    at Error.error.cause (repl:1:21)\\n ...'\n```\n\n## License\n\nCopyright 2014, 2015, 2016 [Telefonica Investigación y Desarrollo, S.A.U](http://www.tid.es)\n\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/therror/serr.git"
  },
  "scripts": {
    "changelog": "conventional-changelog -p jshint",
    "coverage": "istanbul cover ./node_modules/mocha/bin/_mocha -- -R dot test/environment.js test/*.spec.js",
    "lint": "jscs lib && eslint lib",
    "release": "release-it -n -p --github.release --changelogCommand=\"npm run -s changelog\"",
    "test": "mocha -R spec test/environment.js test/*.spec.js",
    "travis": "istanbul cover ./node_modules/mocha/bin/_mocha --report lcovonly -- -R spec test/environment.js test/*.spec.js && cat ./coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js && rm -rf ./coverage"
  },
  "tonicExampleFilename": "examples/tonicdev.js",
  "version": "1.0.1"
}
